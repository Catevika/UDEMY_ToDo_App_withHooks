{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","reducers/todo.reducer.js","context/todos.context.js","reducers/useLocalStorageReducer.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","state","setState","useInputState","value","setValue","e","target","todoReducer","action","type","concat","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","key","defaultVal","reducer","_useReducer","useReducer","JSON","parse","window","localStorage","getItem","String","_useReducer2","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","children","EditTodoForm","_ref","toggleEditForm","useContext","_useInputState","_useInputState2","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","TextField_default","margin","onChange","fullWidth","autoFocus","memo","_useToggleState","useToggleState","_useToggleState2","isEditing","toggle","ListItem_default","height","src_EditTodoForm","Fragment","Checkbox_default","tabIndex","checked","onClick","textDecoration","ListItemSecondaryAction_default","IconButton_default","aria-label","Delete_default","Edit_default","TodoList","Paper_default","List_default","i","src_Todo","assign","Divider_default","TodoForm","padding","label","TodoApp","backgroundColor","elevation","AppBar_default","color","position","Toolbar_default","Typography_default","Grid_default","container","justify","marginTop","item","xs","md","lg","src_TodoForm","src_TodoList","App","src_TodoApp","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.058eea53.chunk.js","sourcesContent":["import { useState } from \"react\";\nfunction useToggle(initialVal = false) {\n  // call useState, \"reserve piece of state\"\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  // return piece of state AND a function to toggle it\n  return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import uuid from 'uuid/v4';\nconst todoReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD':\n\t\t\treturn [...state, { id: uuid(), task: action.task, completed: false }];\n\t\tcase 'REMOVE':\n\t\t\treturn state.filter(todo => todo.id !== action.id);\n\t\tcase 'TOGGLE':\n\t\t\treturn state.map(todo =>\n\t\t\t\ttodo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n\t\t\t);\n\t\tcase 'EDIT':\n\t\t\treturn state.map(todo =>\n\t\t\t\ttodo.id === action.id ? { ...todo, task: action.newTask } : todo\n\t\t\t);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default todoReducer;\n","import React, { createContext } from 'react';\nimport todoReducer from '../reducers/todo.reducer.js';\nimport { useLocalStorageReducer } from '../reducers/useLocalStorageReducer.js';\n\nconst defaultTodos = [\n\t{ id: 1, task: 'Mow the lawn using goats', completed: false },\n\t{ id: 2, task: 'Release lady bugs into garden', completed: true }\n];\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n\tconst [todos, dispatch] = useLocalStorageReducer(\n\t\t'todos',\n\t\tdefaultTodos,\n\t\ttodoReducer\n\t);\n\treturn (\n\t\t<TodosContext.Provider value={todos}>\n\t\t\t<DispatchContext.Provider value={dispatch}>\n\t\t\t\t{props.children}\n\t\t\t</DispatchContext.Provider>\n\t\t</TodosContext.Provider>\n\t);\n}\n","import { useReducer, useEffect } from 'react';\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n\tconst [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n\t\tlet value;\r\n\t\ttry {\r\n\t\t\tvalue = JSON.parse(\r\n\t\t\t\twindow.localStorage.getItem(key) || String(defaultVal)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\tvalue = defaultVal;\r\n\t\t}\r\n\t\treturn value;\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.localStorage.setItem(key, JSON.stringify(state));\r\n\t}, [state]);\r\n\treturn [state, dispatch];\r\n}\r\nexport { useLocalStorageReducer };\r\n","import React, { useContext } from 'react';\nimport useInputState from './hooks/useInputState';\nimport TextField from '@material-ui/core/TextField';\nimport { DispatchContext } from './context/todos.context';\n\nfunction EditTodoForm({ id, task, toggleEditForm }) {\n\tconst dispatch = useContext(DispatchContext);\n\tconst [value, handleChange, reset] = useInputState(task);\n\treturn (\n\t\t<form\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tdispatch({ type: 'EDIT', id: id, newTask: value });\n\t\t\t\treset();\n\t\t\t\ttoggleEditForm();\n\t\t\t}}\n\t\t\tstyle={{ marginLeft: '1rem', width: '50%' }}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tfullWidth\n\t\t\t\tautoFocus\n\t\t\t/>\n\t\t</form>\n\t);\n}\nexport default EditTodoForm;\n","import React, { useContext, memo } from 'react';\nimport useToggleState from './hooks/useToggleState';\nimport EditTodoForm from './EditTodoForm';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { DispatchContext } from './context/todos.context';\n\nfunction Todo({ id, task, completed }) {\n\tconst dispatch = useContext(DispatchContext);\n\tconst [isEditing, toggle] = useToggleState(false);\n\treturn (\n\t\t<ListItem style={{ height: '64px' }}>\n\t\t\t{isEditing ? (\n\t\t\t\t<EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\tchecked={completed}\n\t\t\t\t\t\tonClick={() => dispatch({ type: 'TOGGLE', id: id })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ListItemText\n\t\t\t\t\t\tstyle={{ textDecoration: completed ? 'line-through' : 'none' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{task}\n\t\t\t\t\t</ListItemText>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label='Delete'\n\t\t\t\t\t\t\tonClick={() => dispatch({ type: 'REMOVE', id: id })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton aria-label='Edit' onClick={toggle}>\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</ListItem>\n\t);\n}\n\nexport default memo(Todo);\n","import React, { useContext } from 'react';\nimport Todo from './Todo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { TodosContext } from './context/todos.context';\n\nfunction TodoList() {\n\tconst todos = useContext(TodosContext);\n\tif (todos.length)\n\t\treturn (\n\t\t\t<Paper>\n\t\t\t\t<List>\n\t\t\t\t\t{todos.map((todo, i) => (\n\t\t\t\t\t\t// To add a key to a fragment, we have to use the long-hand version\n\t\t\t\t\t\t// rather than <> </>, we have to use <React.Fragment>\n\t\t\t\t\t\t<React.Fragment key={i}>\n\t\t\t\t\t\t\t<Todo {...todo} key={todo.id} />\n\t\t\t\t\t\t\t{i < todos.length - 1 && <Divider />}\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Paper>\n\t\t);\n\treturn null;\n}\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport useInputState from './hooks/useInputState';\nimport { DispatchContext } from './context/todos.context';\nfunction TodoForm() {\n\tconst [value, handleChange, reset] = useInputState('');\n\tconst dispatch = useContext(DispatchContext);\n\treturn (\n\t\t<Paper style={{ margin: '1rem 0', padding: '0 1rem' }}>\n\t\t\t<form\n\t\t\t\tonSubmit={e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tdispatch({ type: 'ADD', task: value });\n\t\t\t\t\treset();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tmargin='normal'\n\t\t\t\t\tlabel='Add New Todo'\n\t\t\t\t\tfullWidth\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</Paper>\n\t);\n}\nexport default TodoForm;\n","import React from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TodosProvider } from \"./context/todos.context\";\n\nfunction TodoApp() {\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n      elevation={0}\n    >\n      <AppBar color='primary' position='static' style={{ height: \"64px\" }}>\n        <Toolbar>\n          <Typography color='inherit'>TODOS WITH HOOKS</Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container justify='center' style={{ marginTop: \"1rem\" }}>\n        <Grid item xs={11} md={8} lg={4}>\n          <TodosProvider>\n            <TodoForm />\n            <TodoList />\n          </TodosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\nexport default TodoApp;\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}